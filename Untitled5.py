{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from kneed import KneeLocator\n",
    "from sklearn.datasets import make_blobs\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.metrics import silhouette_score\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import sklearn.metrics as sm\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "SO_Dataset = pd.read_csv('Edited Dataset_copy.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "      <th>AorN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1935115</td>\n",
       "      <td>&lt;android&gt;&lt;nullpointerexception&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>12/20/2009 7:25</td>\n",
       "      <td>121</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2355649</td>\n",
       "      <td>30429</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>android</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1887758</td>\n",
       "      <td>&lt;android&gt;&lt;flash&gt;</td>\n",
       "      <td>6</td>\n",
       "      <td>12/11/2009 12:27</td>\n",
       "      <td>23111</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2355649</td>\n",
       "      <td>30429</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>android</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1266145</td>\n",
       "      <td>&lt;localization&gt;&lt;passwords&gt;&lt;windows-xp&gt;&lt;right-to...</td>\n",
       "      <td>6</td>\n",
       "      <td>8/12/2009 13:25</td>\n",
       "      <td>204</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1898</td>\n",
       "      <td>62916</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1197888</td>\n",
       "      <td>&lt;asp.net&gt;&lt;security&gt;&lt;connection-string&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>7/29/2009 3:15</td>\n",
       "      <td>186</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1899</td>\n",
       "      <td>2561</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>asp.net</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>963535</td>\n",
       "      <td>&lt;java&gt;&lt;jsf&gt;&lt;seam&gt;&lt;facelets&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>6/8/2009 5:37</td>\n",
       "      <td>559</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1900</td>\n",
       "      <td>7881</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>java</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6142</th>\n",
       "      <td>4620621</td>\n",
       "      <td>&lt;java&gt;&lt;jboss&gt;&lt;jboss-4.2.x&gt;</td>\n",
       "      <td>4</td>\n",
       "      <td>1/6/2011 22:25</td>\n",
       "      <td>723</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>java</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6143</th>\n",
       "      <td>7584656</td>\n",
       "      <td>&lt;c#&gt;&lt;.net&gt;&lt;wcf&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>9/28/2011 14:15</td>\n",
       "      <td>441</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6144</th>\n",
       "      <td>5647261</td>\n",
       "      <td>&lt;c#&gt;&lt;timeout&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>4/13/2011 9:46</td>\n",
       "      <td>2573</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6145</th>\n",
       "      <td>4829818</td>\n",
       "      <td>&lt;iphone&gt;&lt;cocoa-touch&gt;&lt;caching&gt;&lt;webrequest&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>1/28/2011 15:19</td>\n",
       "      <td>349</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4172</td>\n",
       "      <td>77972</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6146</th>\n",
       "      <td>6019004</td>\n",
       "      <td>&lt;mysql&gt;&lt;ruby-on-rails&gt;&lt;activerecord&gt;</td>\n",
       "      <td>1</td>\n",
       "      <td>5/16/2011 14:38</td>\n",
       "      <td>413</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4174</td>\n",
       "      <td>11336</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>mysql</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6147 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Id                                               Tags  Score  \\\n",
       "0     1935115                    <android><nullpointerexception>      0   \n",
       "1     1887758                                   <android><flash>      6   \n",
       "2     1266145  <localization><passwords><windows-xp><right-to...      6   \n",
       "3     1197888             <asp.net><security><connection-string>      2   \n",
       "4      963535                        <java><jsf><seam><facelets>      0   \n",
       "...       ...                                                ...    ...   \n",
       "6142  4620621                         <java><jboss><jboss-4.2.x>      4   \n",
       "6143  7584656                                    <c#><.net><wcf>      2   \n",
       "6144  5647261                                      <c#><timeout>      2   \n",
       "6145  4829818         <iphone><cocoa-touch><caching><webrequest>      0   \n",
       "6146  6019004               <mysql><ruby-on-rails><activerecord>      1   \n",
       "\n",
       "          CreationDate  ViewCount  AnswerCount  CommentCount  FavoriteCount  \\\n",
       "0      12/20/2009 7:25        121            1             2            NaN   \n",
       "1     12/11/2009 12:27      23111            4             1            4.0   \n",
       "2      8/12/2009 13:25        204            2             1            1.0   \n",
       "3       7/29/2009 3:15        186            3             0            0.0   \n",
       "4        6/8/2009 5:37        559            3             1            1.0   \n",
       "...                ...        ...          ...           ...            ...   \n",
       "6142    1/6/2011 22:25        723            1             1            NaN   \n",
       "6143   9/28/2011 14:15        441            1             0            NaN   \n",
       "6144    4/13/2011 9:46       2573            4             0            NaN   \n",
       "6145   1/28/2011 15:19        349            2             0            1.0   \n",
       "6146   5/16/2011 14:38        413            0             2            NaN   \n",
       "\n",
       "      AskerId  Reputation  TagCount  TitleLength Technology AorN  \n",
       "0     2355649       30429         2            6    android    N  \n",
       "1     2355649       30429         2            6    android    N  \n",
       "2        1898       62916         4            4        NaN    N  \n",
       "3        1899        2561         3           11    asp.net    N  \n",
       "4        1900        7881         4            7       java    N  \n",
       "...       ...         ...       ...          ...        ...  ...  \n",
       "6142     6508       87411         3           11       java    N  \n",
       "6143     6508       87411         3            8         c#    N  \n",
       "6144     6508       87411         2           10         c#    N  \n",
       "6145     4172       77972         4            6        NaN    N  \n",
       "6146     4174       11336         3            6      mysql    N  \n",
       "\n",
       "[6147 rows x 14 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SO_Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Score</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6.147000e+03</td>\n",
       "      <td>6147.000000</td>\n",
       "      <td>6.147000e+03</td>\n",
       "      <td>6147.000000</td>\n",
       "      <td>6147.000000</td>\n",
       "      <td>2918.000000</td>\n",
       "      <td>6.147000e+03</td>\n",
       "      <td>6147.000000</td>\n",
       "      <td>6147.000000</td>\n",
       "      <td>6147.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.744016e+06</td>\n",
       "      <td>6.460875</td>\n",
       "      <td>5.731716e+03</td>\n",
       "      <td>2.659671</td>\n",
       "      <td>1.171140</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>7.298248e+03</td>\n",
       "      <td>42715.146250</td>\n",
       "      <td>2.956727</td>\n",
       "      <td>8.963885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.304157e+06</td>\n",
       "      <td>36.285404</td>\n",
       "      <td>2.911060e+04</td>\n",
       "      <td>2.700895</td>\n",
       "      <td>1.939282</td>\n",
       "      <td>58.845369</td>\n",
       "      <td>9.036152e+04</td>\n",
       "      <td>61069.803313</td>\n",
       "      <td>1.126876</td>\n",
       "      <td>3.694923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.065340e+05</td>\n",
       "      <td>-6.000000</td>\n",
       "      <td>3.100000e+01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.000000e+00</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>8.946440e+05</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.440000e+02</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.190000e+03</td>\n",
       "      <td>6735.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.750338e+06</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.222000e+03</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.536000e+03</td>\n",
       "      <td>21047.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.152266e+06</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3.400500e+03</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.416000e+03</td>\n",
       "      <td>53820.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>11.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>8.688475e+06</td>\n",
       "      <td>2084.000000</td>\n",
       "      <td>1.122933e+06</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>1728.000000</td>\n",
       "      <td>2.449068e+06</td>\n",
       "      <td>806159.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>26.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Id        Score     ViewCount  AnswerCount  CommentCount  \\\n",
       "count  6.147000e+03  6147.000000  6.147000e+03  6147.000000   6147.000000   \n",
       "mean   2.744016e+06     6.460875  5.731716e+03     2.659671      1.171140   \n",
       "std    2.304157e+06    36.285404  2.911060e+04     2.700895      1.939282   \n",
       "min    4.065340e+05    -6.000000  3.100000e+01     0.000000      0.000000   \n",
       "25%    8.946440e+05     1.000000  4.440000e+02     1.000000      0.000000   \n",
       "50%    1.750338e+06     2.000000  1.222000e+03     2.000000      0.000000   \n",
       "75%    4.152266e+06     5.000000  3.400500e+03     3.000000      2.000000   \n",
       "max    8.688475e+06  2084.000000  1.122933e+06    55.000000     23.000000   \n",
       "\n",
       "       FavoriteCount       AskerId     Reputation     TagCount  TitleLength  \n",
       "count    2918.000000  6.147000e+03    6147.000000  6147.000000  6147.000000  \n",
       "mean        6.099726  7.298248e+03   42715.146250     2.956727     8.963885  \n",
       "std        58.845369  9.036152e+04   61069.803313     1.126876     3.694923  \n",
       "min         0.000000  5.000000e+00       1.000000     1.000000     1.000000  \n",
       "25%         1.000000  1.190000e+03    6735.000000     2.000000     6.000000  \n",
       "50%         2.000000  2.536000e+03   21047.000000     3.000000     9.000000  \n",
       "75%         3.000000  5.416000e+03   53820.000000     4.000000    11.000000  \n",
       "max      1728.000000  2.449068e+06  806159.000000     5.000000    26.000000  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SO_Dataset.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "      <th>AorN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6142</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6143</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6144</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6145</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6146</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6147 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Id   Tags  Score  CreationDate  ViewCount  AnswerCount  CommentCount  \\\n",
       "0     False  False  False         False      False        False         False   \n",
       "1     False  False  False         False      False        False         False   \n",
       "2     False  False  False         False      False        False         False   \n",
       "3     False  False  False         False      False        False         False   \n",
       "4     False  False  False         False      False        False         False   \n",
       "...     ...    ...    ...           ...        ...          ...           ...   \n",
       "6142  False  False  False         False      False        False         False   \n",
       "6143  False  False  False         False      False        False         False   \n",
       "6144  False  False  False         False      False        False         False   \n",
       "6145  False  False  False         False      False        False         False   \n",
       "6146  False  False  False         False      False        False         False   \n",
       "\n",
       "      FavoriteCount  AskerId  Reputation  TagCount  TitleLength  Technology  \\\n",
       "0              True    False       False     False        False       False   \n",
       "1             False    False       False     False        False       False   \n",
       "2             False    False       False     False        False        True   \n",
       "3             False    False       False     False        False       False   \n",
       "4             False    False       False     False        False       False   \n",
       "...             ...      ...         ...       ...          ...         ...   \n",
       "6142           True    False       False     False        False       False   \n",
       "6143           True    False       False     False        False       False   \n",
       "6144           True    False       False     False        False       False   \n",
       "6145          False    False       False     False        False        True   \n",
       "6146           True    False       False     False        False       False   \n",
       "\n",
       "       AorN  \n",
       "0     False  \n",
       "1     False  \n",
       "2     False  \n",
       "3     False  \n",
       "4     False  \n",
       "...     ...  \n",
       "6142  False  \n",
       "6143  False  \n",
       "6144  False  \n",
       "6145  False  \n",
       "6146  False  \n",
       "\n",
       "[6147 rows x 14 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SO_Dataset.isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id                  0\n",
       "Tags                0\n",
       "Score               0\n",
       "CreationDate        0\n",
       "ViewCount           0\n",
       "AnswerCount         0\n",
       "CommentCount        0\n",
       "FavoriteCount    3229\n",
       "AskerId             0\n",
       "Reputation          0\n",
       "TagCount            0\n",
       "TitleLength         0\n",
       "Technology       2416\n",
       "AorN                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SO_Dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "      <th>AorN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1935115</td>\n",
       "      <td>&lt;android&gt;&lt;nullpointerexception&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>12/20/2009 7:25</td>\n",
       "      <td>121</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2355649</td>\n",
       "      <td>30429</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>android</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>654565</td>\n",
       "      <td>&lt;xml&gt;&lt;xslt&gt;&lt;xslt-1.0&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>3/17/2009 14:50</td>\n",
       "      <td>2600</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1900</td>\n",
       "      <td>7881</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>xml</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1142067</td>\n",
       "      <td>&lt;javascript&gt;&lt;sharepoint&gt;&lt;cross-browser&gt;&lt;user-a...</td>\n",
       "      <td>0</td>\n",
       "      <td>7/17/2009 8:43</td>\n",
       "      <td>567</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1909</td>\n",
       "      <td>13571</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>javascript</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1611471</td>\n",
       "      <td>&lt;sharepoint&gt;&lt;sharepoint-2007&gt;&lt;moss&gt;&lt;wss&gt;&lt;share...</td>\n",
       "      <td>0</td>\n",
       "      <td>10/23/2009 5:05</td>\n",
       "      <td>1398</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1909</td>\n",
       "      <td>13571</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>sharepoint</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1716113</td>\n",
       "      <td>&lt;sharepoint&gt;&lt;sharepoint-2007&gt;&lt;sharepoint-desig...</td>\n",
       "      <td>2</td>\n",
       "      <td>11/11/2009 15:54</td>\n",
       "      <td>4172</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1909</td>\n",
       "      <td>13571</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>sharepoint</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6138</th>\n",
       "      <td>5665302</td>\n",
       "      <td>&lt;wpf&gt;&lt;wpfdatagrid&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>4/14/2011 15:05</td>\n",
       "      <td>2639</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6486</td>\n",
       "      <td>14492</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6142</th>\n",
       "      <td>4620621</td>\n",
       "      <td>&lt;java&gt;&lt;jboss&gt;&lt;jboss-4.2.x&gt;</td>\n",
       "      <td>4</td>\n",
       "      <td>1/6/2011 22:25</td>\n",
       "      <td>723</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>java</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6143</th>\n",
       "      <td>7584656</td>\n",
       "      <td>&lt;c#&gt;&lt;.net&gt;&lt;wcf&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>9/28/2011 14:15</td>\n",
       "      <td>441</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6144</th>\n",
       "      <td>5647261</td>\n",
       "      <td>&lt;c#&gt;&lt;timeout&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>4/13/2011 9:46</td>\n",
       "      <td>2573</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6146</th>\n",
       "      <td>6019004</td>\n",
       "      <td>&lt;mysql&gt;&lt;ruby-on-rails&gt;&lt;activerecord&gt;</td>\n",
       "      <td>1</td>\n",
       "      <td>5/16/2011 14:38</td>\n",
       "      <td>413</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4174</td>\n",
       "      <td>11336</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>mysql</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3229 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Id                                               Tags  Score  \\\n",
       "0     1935115                    <android><nullpointerexception>      0   \n",
       "5      654565                              <xml><xslt><xslt-1.0>      0   \n",
       "6     1142067  <javascript><sharepoint><cross-browser><user-a...      0   \n",
       "7     1611471  <sharepoint><sharepoint-2007><moss><wss><share...      0   \n",
       "8     1716113  <sharepoint><sharepoint-2007><sharepoint-desig...      2   \n",
       "...       ...                                                ...    ...   \n",
       "6138  5665302                                 <wpf><wpfdatagrid>      2   \n",
       "6142  4620621                         <java><jboss><jboss-4.2.x>      4   \n",
       "6143  7584656                                    <c#><.net><wcf>      2   \n",
       "6144  5647261                                      <c#><timeout>      2   \n",
       "6146  6019004               <mysql><ruby-on-rails><activerecord>      1   \n",
       "\n",
       "          CreationDate  ViewCount  AnswerCount  CommentCount  FavoriteCount  \\\n",
       "0      12/20/2009 7:25        121            1             2            NaN   \n",
       "5      3/17/2009 14:50       2600            2             1            NaN   \n",
       "6       7/17/2009 8:43        567            1             0            NaN   \n",
       "7      10/23/2009 5:05       1398            2             0            NaN   \n",
       "8     11/11/2009 15:54       4172            1             0            NaN   \n",
       "...                ...        ...          ...           ...            ...   \n",
       "6138   4/14/2011 15:05       2639            1             0            NaN   \n",
       "6142    1/6/2011 22:25        723            1             1            NaN   \n",
       "6143   9/28/2011 14:15        441            1             0            NaN   \n",
       "6144    4/13/2011 9:46       2573            4             0            NaN   \n",
       "6146   5/16/2011 14:38        413            0             2            NaN   \n",
       "\n",
       "      AskerId  Reputation  TagCount  TitleLength  Technology AorN  \n",
       "0     2355649       30429         2            6     android    N  \n",
       "5        1900        7881         3            8         xml    N  \n",
       "6        1909       13571         4            5  javascript    N  \n",
       "7        1909       13571         5            5  sharepoint    N  \n",
       "8        1909       13571         4           13  sharepoint    N  \n",
       "...       ...         ...       ...          ...         ...  ...  \n",
       "6138     6486       14492         2           12         NaN    N  \n",
       "6142     6508       87411         3           11        java    N  \n",
       "6143     6508       87411         3            8          c#    N  \n",
       "6144     6508       87411         2           10          c#    N  \n",
       "6146     4174       11336         3            6       mysql    N  \n",
       "\n",
       "[3229 rows x 14 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SO_Dataset[SO_Dataset['FavoriteCount'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "SO_Dataset = SO_Dataset.fillna(SO_Dataset.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "      <th>AorN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1935115</td>\n",
       "      <td>&lt;android&gt;&lt;nullpointerexception&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>12/20/2009 7:25</td>\n",
       "      <td>121</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>2355649</td>\n",
       "      <td>30429</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>android</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1887758</td>\n",
       "      <td>&lt;android&gt;&lt;flash&gt;</td>\n",
       "      <td>6</td>\n",
       "      <td>12/11/2009 12:27</td>\n",
       "      <td>23111</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2355649</td>\n",
       "      <td>30429</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>android</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1266145</td>\n",
       "      <td>&lt;localization&gt;&lt;passwords&gt;&lt;windows-xp&gt;&lt;right-to...</td>\n",
       "      <td>6</td>\n",
       "      <td>8/12/2009 13:25</td>\n",
       "      <td>204</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1898</td>\n",
       "      <td>62916</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1197888</td>\n",
       "      <td>&lt;asp.net&gt;&lt;security&gt;&lt;connection-string&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>7/29/2009 3:15</td>\n",
       "      <td>186</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1899</td>\n",
       "      <td>2561</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>asp.net</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>963535</td>\n",
       "      <td>&lt;java&gt;&lt;jsf&gt;&lt;seam&gt;&lt;facelets&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>6/8/2009 5:37</td>\n",
       "      <td>559</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1900</td>\n",
       "      <td>7881</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>java</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6142</th>\n",
       "      <td>4620621</td>\n",
       "      <td>&lt;java&gt;&lt;jboss&gt;&lt;jboss-4.2.x&gt;</td>\n",
       "      <td>4</td>\n",
       "      <td>1/6/2011 22:25</td>\n",
       "      <td>723</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>java</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6143</th>\n",
       "      <td>7584656</td>\n",
       "      <td>&lt;c#&gt;&lt;.net&gt;&lt;wcf&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>9/28/2011 14:15</td>\n",
       "      <td>441</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6144</th>\n",
       "      <td>5647261</td>\n",
       "      <td>&lt;c#&gt;&lt;timeout&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>4/13/2011 9:46</td>\n",
       "      <td>2573</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6145</th>\n",
       "      <td>4829818</td>\n",
       "      <td>&lt;iphone&gt;&lt;cocoa-touch&gt;&lt;caching&gt;&lt;webrequest&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>1/28/2011 15:19</td>\n",
       "      <td>349</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4172</td>\n",
       "      <td>77972</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6146</th>\n",
       "      <td>6019004</td>\n",
       "      <td>&lt;mysql&gt;&lt;ruby-on-rails&gt;&lt;activerecord&gt;</td>\n",
       "      <td>1</td>\n",
       "      <td>5/16/2011 14:38</td>\n",
       "      <td>413</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>4174</td>\n",
       "      <td>11336</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>mysql</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6147 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Id                                               Tags  Score  \\\n",
       "0     1935115                    <android><nullpointerexception>      0   \n",
       "1     1887758                                   <android><flash>      6   \n",
       "2     1266145  <localization><passwords><windows-xp><right-to...      6   \n",
       "3     1197888             <asp.net><security><connection-string>      2   \n",
       "4      963535                        <java><jsf><seam><facelets>      0   \n",
       "...       ...                                                ...    ...   \n",
       "6142  4620621                         <java><jboss><jboss-4.2.x>      4   \n",
       "6143  7584656                                    <c#><.net><wcf>      2   \n",
       "6144  5647261                                      <c#><timeout>      2   \n",
       "6145  4829818         <iphone><cocoa-touch><caching><webrequest>      0   \n",
       "6146  6019004               <mysql><ruby-on-rails><activerecord>      1   \n",
       "\n",
       "          CreationDate  ViewCount  AnswerCount  CommentCount  FavoriteCount  \\\n",
       "0      12/20/2009 7:25        121            1             2       6.099726   \n",
       "1     12/11/2009 12:27      23111            4             1       4.000000   \n",
       "2      8/12/2009 13:25        204            2             1       1.000000   \n",
       "3       7/29/2009 3:15        186            3             0       0.000000   \n",
       "4        6/8/2009 5:37        559            3             1       1.000000   \n",
       "...                ...        ...          ...           ...            ...   \n",
       "6142    1/6/2011 22:25        723            1             1       6.099726   \n",
       "6143   9/28/2011 14:15        441            1             0       6.099726   \n",
       "6144    4/13/2011 9:46       2573            4             0       6.099726   \n",
       "6145   1/28/2011 15:19        349            2             0       1.000000   \n",
       "6146   5/16/2011 14:38        413            0             2       6.099726   \n",
       "\n",
       "      AskerId  Reputation  TagCount  TitleLength Technology AorN  \n",
       "0     2355649       30429         2            6    android    N  \n",
       "1     2355649       30429         2            6    android    N  \n",
       "2        1898       62916         4            4        NaN    N  \n",
       "3        1899        2561         3           11    asp.net    N  \n",
       "4        1900        7881         4            7       java    N  \n",
       "...       ...         ...       ...          ...        ...  ...  \n",
       "6142     6508       87411         3           11       java    N  \n",
       "6143     6508       87411         3            8         c#    N  \n",
       "6144     6508       87411         2           10         c#    N  \n",
       "6145     4172       77972         4            6        NaN    N  \n",
       "6146     4174       11336         3            6      mysql    N  \n",
       "\n",
       "[6147 rows x 14 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SO_Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id                  0\n",
       "Tags                0\n",
       "Score               0\n",
       "CreationDate        0\n",
       "ViewCount           0\n",
       "AnswerCount         0\n",
       "CommentCount        0\n",
       "FavoriteCount       0\n",
       "AskerId             0\n",
       "Reputation          0\n",
       "TagCount            0\n",
       "TitleLength         0\n",
       "Technology       2416\n",
       "AorN                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SO_Dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "New_SO_Dataset = SO_Dataset.fillna({\n",
    "    'Technology' : \"No Related Technology\"\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "      <th>AorN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1935115</td>\n",
       "      <td>&lt;android&gt;&lt;nullpointerexception&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>12/20/2009 7:25</td>\n",
       "      <td>121</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>2355649</td>\n",
       "      <td>30429</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>android</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1887758</td>\n",
       "      <td>&lt;android&gt;&lt;flash&gt;</td>\n",
       "      <td>6</td>\n",
       "      <td>12/11/2009 12:27</td>\n",
       "      <td>23111</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2355649</td>\n",
       "      <td>30429</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>android</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1266145</td>\n",
       "      <td>&lt;localization&gt;&lt;passwords&gt;&lt;windows-xp&gt;&lt;right-to...</td>\n",
       "      <td>6</td>\n",
       "      <td>8/12/2009 13:25</td>\n",
       "      <td>204</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1898</td>\n",
       "      <td>62916</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>No Related Technology</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1197888</td>\n",
       "      <td>&lt;asp.net&gt;&lt;security&gt;&lt;connection-string&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>7/29/2009 3:15</td>\n",
       "      <td>186</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1899</td>\n",
       "      <td>2561</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>asp.net</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>963535</td>\n",
       "      <td>&lt;java&gt;&lt;jsf&gt;&lt;seam&gt;&lt;facelets&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>6/8/2009 5:37</td>\n",
       "      <td>559</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1900</td>\n",
       "      <td>7881</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>java</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6142</th>\n",
       "      <td>4620621</td>\n",
       "      <td>&lt;java&gt;&lt;jboss&gt;&lt;jboss-4.2.x&gt;</td>\n",
       "      <td>4</td>\n",
       "      <td>1/6/2011 22:25</td>\n",
       "      <td>723</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>java</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6143</th>\n",
       "      <td>7584656</td>\n",
       "      <td>&lt;c#&gt;&lt;.net&gt;&lt;wcf&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>9/28/2011 14:15</td>\n",
       "      <td>441</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6144</th>\n",
       "      <td>5647261</td>\n",
       "      <td>&lt;c#&gt;&lt;timeout&gt;</td>\n",
       "      <td>2</td>\n",
       "      <td>4/13/2011 9:46</td>\n",
       "      <td>2573</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>6508</td>\n",
       "      <td>87411</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>c#</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6145</th>\n",
       "      <td>4829818</td>\n",
       "      <td>&lt;iphone&gt;&lt;cocoa-touch&gt;&lt;caching&gt;&lt;webrequest&gt;</td>\n",
       "      <td>0</td>\n",
       "      <td>1/28/2011 15:19</td>\n",
       "      <td>349</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4172</td>\n",
       "      <td>77972</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>No Related Technology</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6146</th>\n",
       "      <td>6019004</td>\n",
       "      <td>&lt;mysql&gt;&lt;ruby-on-rails&gt;&lt;activerecord&gt;</td>\n",
       "      <td>1</td>\n",
       "      <td>5/16/2011 14:38</td>\n",
       "      <td>413</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6.099726</td>\n",
       "      <td>4174</td>\n",
       "      <td>11336</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>mysql</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6147 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Id                                               Tags  Score  \\\n",
       "0     1935115                    <android><nullpointerexception>      0   \n",
       "1     1887758                                   <android><flash>      6   \n",
       "2     1266145  <localization><passwords><windows-xp><right-to...      6   \n",
       "3     1197888             <asp.net><security><connection-string>      2   \n",
       "4      963535                        <java><jsf><seam><facelets>      0   \n",
       "...       ...                                                ...    ...   \n",
       "6142  4620621                         <java><jboss><jboss-4.2.x>      4   \n",
       "6143  7584656                                    <c#><.net><wcf>      2   \n",
       "6144  5647261                                      <c#><timeout>      2   \n",
       "6145  4829818         <iphone><cocoa-touch><caching><webrequest>      0   \n",
       "6146  6019004               <mysql><ruby-on-rails><activerecord>      1   \n",
       "\n",
       "          CreationDate  ViewCount  AnswerCount  CommentCount  FavoriteCount  \\\n",
       "0      12/20/2009 7:25        121            1             2       6.099726   \n",
       "1     12/11/2009 12:27      23111            4             1       4.000000   \n",
       "2      8/12/2009 13:25        204            2             1       1.000000   \n",
       "3       7/29/2009 3:15        186            3             0       0.000000   \n",
       "4        6/8/2009 5:37        559            3             1       1.000000   \n",
       "...                ...        ...          ...           ...            ...   \n",
       "6142    1/6/2011 22:25        723            1             1       6.099726   \n",
       "6143   9/28/2011 14:15        441            1             0       6.099726   \n",
       "6144    4/13/2011 9:46       2573            4             0       6.099726   \n",
       "6145   1/28/2011 15:19        349            2             0       1.000000   \n",
       "6146   5/16/2011 14:38        413            0             2       6.099726   \n",
       "\n",
       "      AskerId  Reputation  TagCount  TitleLength             Technology AorN  \n",
       "0     2355649       30429         2            6                android    N  \n",
       "1     2355649       30429         2            6                android    N  \n",
       "2        1898       62916         4            4  No Related Technology    N  \n",
       "3        1899        2561         3           11                asp.net    N  \n",
       "4        1900        7881         4            7                   java    N  \n",
       "...       ...         ...       ...          ...                    ...  ...  \n",
       "6142     6508       87411         3           11                   java    N  \n",
       "6143     6508       87411         3            8                     c#    N  \n",
       "6144     6508       87411         2           10                     c#    N  \n",
       "6145     4172       77972         4            6  No Related Technology    N  \n",
       "6146     4174       11336         3            6                  mysql    N  \n",
       "\n",
       "[6147 rows x 14 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "New_SO_Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id               0\n",
       "Tags             0\n",
       "Score            0\n",
       "CreationDate     0\n",
       "ViewCount        0\n",
       "AnswerCount      0\n",
       "CommentCount     0\n",
       "FavoriteCount    0\n",
       "AskerId          0\n",
       "Reputation       0\n",
       "TagCount         0\n",
       "TitleLength      0\n",
       "Technology       0\n",
       "AorN             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "New_SO_Dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "No Related Technology    2416\n",
       "c#                        716\n",
       "java                      433\n",
       ".net                      396\n",
       "javascript                259\n",
       "asp.net                   221\n",
       "c++                       198\n",
       "python                    167\n",
       "php                       150\n",
       "ruby-on-rails             113\n",
       "asp.net-mvc               113\n",
       "sharepoint                108\n",
       "sql                        87\n",
       "html                       85\n",
       "jquery                     77\n",
       "windows                    67\n",
       "mysql                      54\n",
       "nhibernate                 49\n",
       "ruby                       49\n",
       "android                    48\n",
       "css                        42\n",
       "ios                        41\n",
       "c                          38\n",
       "cocoa                      29\n",
       "xml                        28\n",
       "linux                      28\n",
       "oracle                     27\n",
       "oop                        18\n",
       "ajax                       16\n",
       "tomcat                     15\n",
       "perl                       15\n",
       "regex                      13\n",
       "hibernate                  12\n",
       "asp.net-ajax                6\n",
       "mongodb                     4\n",
       "soap                        4\n",
       "maven                       3\n",
       "selenium                    2\n",
       "Name: Technology, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "New_SO_Dataset.Technology.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(pandas.core.frame.DataFrame, (6147, 14))"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(New_SO_Dataset),New_SO_Dataset.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "labelEncoder = LabelEncoder()\n",
    "dataTransform = New_SO_Dataset.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "for data in New_SO_Dataset.columns:\n",
    "    dataTransform[data] = labelEncoder.fit_transform(dataTransform[data])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "      <th>AorN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1654</td>\n",
       "      <td>337</td>\n",
       "      <td>5</td>\n",
       "      <td>1190</td>\n",
       "      <td>75</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1343</td>\n",
       "      <td>1105</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1625</td>\n",
       "      <td>330</td>\n",
       "      <td>11</td>\n",
       "      <td>1080</td>\n",
       "      <td>2651</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1343</td>\n",
       "      <td>1105</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1155</td>\n",
       "      <td>2598</td>\n",
       "      <td>11</td>\n",
       "      <td>3828</td>\n",
       "      <td>156</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>437</td>\n",
       "      <td>1280</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1103</td>\n",
       "      <td>585</td>\n",
       "      <td>7</td>\n",
       "      <td>3679</td>\n",
       "      <td>138</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>438</td>\n",
       "      <td>272</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>873</td>\n",
       "      <td>2161</td>\n",
       "      <td>5</td>\n",
       "      <td>3374</td>\n",
       "      <td>482</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>439</td>\n",
       "      <td>640</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6142</th>\n",
       "      <td>3126</td>\n",
       "      <td>2147</td>\n",
       "      <td>9</td>\n",
       "      <td>377</td>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>1103</td>\n",
       "      <td>1323</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6143</th>\n",
       "      <td>4148</td>\n",
       "      <td>768</td>\n",
       "      <td>7</td>\n",
       "      <td>4371</td>\n",
       "      <td>376</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1103</td>\n",
       "      <td>1323</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6144</th>\n",
       "      <td>3536</td>\n",
       "      <td>1042</td>\n",
       "      <td>7</td>\n",
       "      <td>2252</td>\n",
       "      <td>1571</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1103</td>\n",
       "      <td>1323</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6145</th>\n",
       "      <td>3224</td>\n",
       "      <td>1914</td>\n",
       "      <td>5</td>\n",
       "      <td>284</td>\n",
       "      <td>293</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>778</td>\n",
       "      <td>1316</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6146</th>\n",
       "      <td>3671</td>\n",
       "      <td>2724</td>\n",
       "      <td>6</td>\n",
       "      <td>2702</td>\n",
       "      <td>351</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>779</td>\n",
       "      <td>771</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6147 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Id  Tags  Score  CreationDate  ViewCount  AnswerCount  CommentCount  \\\n",
       "0     1654   337      5          1190         75            1             2   \n",
       "1     1625   330     11          1080       2651            4             1   \n",
       "2     1155  2598     11          3828        156            2             1   \n",
       "3     1103   585      7          3679        138            3             0   \n",
       "4      873  2161      5          3374        482            3             1   \n",
       "...    ...   ...    ...           ...        ...          ...           ...   \n",
       "6142  3126  2147      9           377        615            1             1   \n",
       "6143  4148   768      7          4371        376            1             0   \n",
       "6144  3536  1042      7          2252       1571            4             0   \n",
       "6145  3224  1914      5           284        293            2             0   \n",
       "6146  3671  2724      6          2702        351            0             2   \n",
       "\n",
       "      FavoriteCount  AskerId  Reputation  TagCount  TitleLength  Technology  \\\n",
       "0                 7     1343        1105         1            5           3   \n",
       "1                 4     1343        1105         1            5           3   \n",
       "2                 1      437        1280         3            3           1   \n",
       "3                 0      438         272         2           10           4   \n",
       "4                 1      439         640         3            6          15   \n",
       "...             ...      ...         ...       ...          ...         ...   \n",
       "6142              7     1103        1323         2           10          15   \n",
       "6143              7     1103        1323         2            7           8   \n",
       "6144              7     1103        1323         1            9           8   \n",
       "6145              1      778        1316         3            5           1   \n",
       "6146              7      779         771         2            5          21   \n",
       "\n",
       "      AorN  \n",
       "0        0  \n",
       "1        0  \n",
       "2        0  \n",
       "3        0  \n",
       "4        0  \n",
       "...    ...  \n",
       "6142     0  \n",
       "6143     0  \n",
       "6144     0  \n",
       "6145     0  \n",
       "6146     0  \n",
       "\n",
       "[6147 rows x 14 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataTransform"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = dataTransform.drop(['Id','Tags','AorN'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>1190</td>\n",
       "      <td>75</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1343</td>\n",
       "      <td>1105</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11</td>\n",
       "      <td>1080</td>\n",
       "      <td>2651</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1343</td>\n",
       "      <td>1105</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11</td>\n",
       "      <td>3828</td>\n",
       "      <td>156</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>437</td>\n",
       "      <td>1280</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>3679</td>\n",
       "      <td>138</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>438</td>\n",
       "      <td>272</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>3374</td>\n",
       "      <td>482</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>439</td>\n",
       "      <td>640</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6142</th>\n",
       "      <td>9</td>\n",
       "      <td>377</td>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>1103</td>\n",
       "      <td>1323</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6143</th>\n",
       "      <td>7</td>\n",
       "      <td>4371</td>\n",
       "      <td>376</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1103</td>\n",
       "      <td>1323</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6144</th>\n",
       "      <td>7</td>\n",
       "      <td>2252</td>\n",
       "      <td>1571</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1103</td>\n",
       "      <td>1323</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6145</th>\n",
       "      <td>5</td>\n",
       "      <td>284</td>\n",
       "      <td>293</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>778</td>\n",
       "      <td>1316</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6146</th>\n",
       "      <td>6</td>\n",
       "      <td>2702</td>\n",
       "      <td>351</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>779</td>\n",
       "      <td>771</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6147 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Score  CreationDate  ViewCount  AnswerCount  CommentCount  \\\n",
       "0         5          1190         75            1             2   \n",
       "1        11          1080       2651            4             1   \n",
       "2        11          3828        156            2             1   \n",
       "3         7          3679        138            3             0   \n",
       "4         5          3374        482            3             1   \n",
       "...     ...           ...        ...          ...           ...   \n",
       "6142      9           377        615            1             1   \n",
       "6143      7          4371        376            1             0   \n",
       "6144      7          2252       1571            4             0   \n",
       "6145      5           284        293            2             0   \n",
       "6146      6          2702        351            0             2   \n",
       "\n",
       "      FavoriteCount  AskerId  Reputation  TagCount  TitleLength  Technology  \n",
       "0                 7     1343        1105         1            5           3  \n",
       "1                 4     1343        1105         1            5           3  \n",
       "2                 1      437        1280         3            3           1  \n",
       "3                 0      438         272         2           10           4  \n",
       "4                 1      439         640         3            6          15  \n",
       "...             ...      ...         ...       ...          ...         ...  \n",
       "6142              7     1103        1323         2           10          15  \n",
       "6143              7     1103        1323         2            7           8  \n",
       "6144              7     1103        1323         1            9           8  \n",
       "6145              1      778        1316         3            5           1  \n",
       "6146              7      779         771         2            5          21  \n",
       "\n",
       "[6147 rows x 11 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "Unanswered_Questions_Feature_List = list(X.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Score',\n",
       " 'CreationDate',\n",
       " 'ViewCount',\n",
       " 'AnswerCount',\n",
       " 'CommentCount',\n",
       " 'FavoriteCount',\n",
       " 'AskerId',\n",
       " 'Reputation',\n",
       " 'TagCount',\n",
       " 'TitleLength',\n",
       " 'Technology']"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Unanswered_Questions_Feature_List"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train,X_test = train_test_split(X,test_size=0.2,random_state = 41)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5319</th>\n",
       "      <td>8</td>\n",
       "      <td>1093</td>\n",
       "      <td>1631</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1119</td>\n",
       "      <td>502</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1799</th>\n",
       "      <td>6</td>\n",
       "      <td>2380</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>476</td>\n",
       "      <td>992</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>532</th>\n",
       "      <td>5</td>\n",
       "      <td>3372</td>\n",
       "      <td>1223</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>861</td>\n",
       "      <td>293</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6042</th>\n",
       "      <td>10</td>\n",
       "      <td>3800</td>\n",
       "      <td>428</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1091</td>\n",
       "      <td>845</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1714</th>\n",
       "      <td>8</td>\n",
       "      <td>2565</td>\n",
       "      <td>1434</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>447</td>\n",
       "      <td>1290</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5200</th>\n",
       "      <td>10</td>\n",
       "      <td>2404</td>\n",
       "      <td>954</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>791</td>\n",
       "      <td>1041</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4066</th>\n",
       "      <td>14</td>\n",
       "      <td>1161</td>\n",
       "      <td>853</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>233</td>\n",
       "      <td>631</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3980</th>\n",
       "      <td>9</td>\n",
       "      <td>2296</td>\n",
       "      <td>679</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>490</td>\n",
       "      <td>1381</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>7</td>\n",
       "      <td>2536</td>\n",
       "      <td>873</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>338</td>\n",
       "      <td>1287</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1984</th>\n",
       "      <td>7</td>\n",
       "      <td>1408</td>\n",
       "      <td>1828</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>289</td>\n",
       "      <td>1155</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4917 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Score  CreationDate  ViewCount  AnswerCount  CommentCount  \\\n",
       "5319      8          1093       1631            1             0   \n",
       "1799      6          2380         80            2             0   \n",
       "532       5          3372       1223            3             0   \n",
       "6042     10          3800        428            2             0   \n",
       "1714      8          2565       1434            1             0   \n",
       "...     ...           ...        ...          ...           ...   \n",
       "5200     10          2404        954            1             0   \n",
       "4066     14          1161        853            3             8   \n",
       "3980      9          2296        679            1             1   \n",
       "931       7          2536        873            4             2   \n",
       "1984      7          1408       1828            4             0   \n",
       "\n",
       "      FavoriteCount  AskerId  Reputation  TagCount  TitleLength  Technology  \n",
       "5319              1     1119         502         4           12           1  \n",
       "1799              7      476         992         1           14          16  \n",
       "532               0      861         293         2            7           1  \n",
       "6042              1     1091         845         1            5           1  \n",
       "1714              7      447        1290         2           10          22  \n",
       "...             ...      ...         ...       ...          ...         ...  \n",
       "5200              7      791        1041         3            6          30  \n",
       "4066              1      233         631         2            2           1  \n",
       "3980              1      490        1381         3            9          27  \n",
       "931               1      338        1287         1            2           1  \n",
       "1984              7      289        1155         0           10           1  \n",
       "\n",
       "[4917 rows x 11 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(4917, 11)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5821</th>\n",
       "      <td>6</td>\n",
       "      <td>360</td>\n",
       "      <td>446</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>686</td>\n",
       "      <td>1102</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5561</th>\n",
       "      <td>8</td>\n",
       "      <td>762</td>\n",
       "      <td>1085</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>645</td>\n",
       "      <td>991</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>819</th>\n",
       "      <td>8</td>\n",
       "      <td>1329</td>\n",
       "      <td>1595</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1065</td>\n",
       "      <td>1069</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1364</th>\n",
       "      <td>6</td>\n",
       "      <td>3772</td>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>367</td>\n",
       "      <td>1267</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1775</th>\n",
       "      <td>7</td>\n",
       "      <td>937</td>\n",
       "      <td>352</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>467</td>\n",
       "      <td>1086</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>927</th>\n",
       "      <td>5</td>\n",
       "      <td>2130</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>338</td>\n",
       "      <td>1287</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3649</th>\n",
       "      <td>6</td>\n",
       "      <td>494</td>\n",
       "      <td>883</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>778</td>\n",
       "      <td>1316</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3917</th>\n",
       "      <td>5</td>\n",
       "      <td>3270</td>\n",
       "      <td>931</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>164</td>\n",
       "      <td>637</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1192</th>\n",
       "      <td>3</td>\n",
       "      <td>2677</td>\n",
       "      <td>1755</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1289</td>\n",
       "      <td>1092</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1908</th>\n",
       "      <td>5</td>\n",
       "      <td>1737</td>\n",
       "      <td>296</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>507</td>\n",
       "      <td>1279</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1230 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Score  CreationDate  ViewCount  AnswerCount  CommentCount  \\\n",
       "5821      6           360        446            6             0   \n",
       "5561      8           762       1085            2             1   \n",
       "819       8          1329       1595            2             2   \n",
       "1364      6          3772        563            1             0   \n",
       "1775      7           937        352            1             0   \n",
       "...     ...           ...        ...          ...           ...   \n",
       "927       5          2130         22            1             0   \n",
       "3649      6           494        883            1             0   \n",
       "3917      5          3270        931            1             6   \n",
       "1192      3          2677       1755            6             2   \n",
       "1908      5          1737        296            7             2   \n",
       "\n",
       "      FavoriteCount  AskerId  Reputation  TagCount  TitleLength  Technology  \n",
       "5821              7      686        1102         2           13           8  \n",
       "5561              1      645         991         3            5          29  \n",
       "819               2     1065        1069         2            2           9  \n",
       "1364              1      367        1267         2            9          17  \n",
       "1775              1      467        1086         1           10           1  \n",
       "...             ...      ...         ...       ...          ...         ...  \n",
       "927               7      338        1287         1            6           1  \n",
       "3649              7      778        1316         2            7           1  \n",
       "3917              7      164         637         2            9           0  \n",
       "1192              7     1289        1092         2           10           9  \n",
       "1908              1      507        1279         2            4           1  \n",
       "\n",
       "[1230 rows x 11 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.DataFrame(X_train).to_csv(\"x_train.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "Train_Data_set = pd.read_csv('x_train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.DataFrame(X_test).to_csv(\"x_test.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "Test_Data_set = pd.read_csv('x_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_row = make_blobs(n_samples = 4917, n_features = 11, centers = 2, cluster_std = 1.8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1e0670e8>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(train_row[0][:,0], train_row[0][:,1], c=train_row[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run local implementation of kmeans\n",
    "km = KMeans(n_clusters=2, max_iter=100)\n",
    "km = km.fit(X_train)\n",
    "centroids = km.cluster_centers_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 0 0 ... 0 0 1]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "cluster\n",
       "0    2483\n",
       "1    2434\n",
       "dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#how many observations are in each cluster\n",
    "print(km.labels_)\n",
    "result=km.labels_\n",
    "result=pd.DataFrame(result,columns=['cluster'])\n",
    "result.groupby(\"cluster\").size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 0 0 ... 0 0 1]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Visualization of clustered data')"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the clustered data\n",
    "cluster  = km.fit_predict(X_train)\n",
    "print(cluster)\n",
    "plt.scatter(X_train.iloc[:,0],X_train.iloc[:,1],c=cluster,cmap='summer', label = 'cluster 1')\n",
    "plt.scatter(X_train.iloc[:,0],X_train.iloc[:,1],c=cluster,cmap='summer', label = 'cluster 2')\n",
    "\n",
    "plt.scatter(centroids[:, 0], centroids[:, 1], marker='*', s=300,\n",
    "            c='r', label='centroid')\n",
    "plt.title('Visualization of clustered data', fontweight='bold')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.577760</td>\n",
       "      <td>3341.298147</td>\n",
       "      <td>1073.062450</td>\n",
       "      <td>2.468977</td>\n",
       "      <td>1.099919</td>\n",
       "      <td>5.407736</td>\n",
       "      <td>612.774376</td>\n",
       "      <td>893.553586</td>\n",
       "      <td>1.958098</td>\n",
       "      <td>7.943997</td>\n",
       "      <td>8.783642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.334292</td>\n",
       "      <td>1117.629158</td>\n",
       "      <td>1175.877207</td>\n",
       "      <td>2.780698</td>\n",
       "      <td>1.203696</td>\n",
       "      <td>5.393840</td>\n",
       "      <td>609.270226</td>\n",
       "      <td>881.868172</td>\n",
       "      <td>1.962218</td>\n",
       "      <td>7.997947</td>\n",
       "      <td>8.953183</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Score  CreationDate    ViewCount  AnswerCount  CommentCount  \\\n",
       "0   9.577760   3341.298147  1073.062450     2.468977      1.099919   \n",
       "1  10.334292   1117.629158  1175.877207     2.780698      1.203696   \n",
       "\n",
       "   FavoriteCount     AskerId  Reputation  TagCount  TitleLength  Technology  \n",
       "0       5.407736  612.774376  893.553586  1.958098     7.943997    8.783642  \n",
       "1       5.393840  609.270226  881.868172  1.962218     7.997947    8.953183  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#The centroid of cluster\n",
    "centroids=km.cluster_centers_\n",
    "centroids=pd.DataFrame(centroids,columns=['Score',\n",
    " 'CreationDate',\n",
    " 'ViewCount',\n",
    " 'AnswerCount',\n",
    " 'CommentCount',\n",
    " 'FavoriteCount',\n",
    " 'AskerId',\n",
    " 'Reputation',\n",
    " 'TagCount',\n",
    " 'TitleLength',\n",
    " 'Technology'])\n",
    "centroids"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "Train_Data_set['cluster']=km.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Score</th>\n",
       "      <th>CreationDate</th>\n",
       "      <th>ViewCount</th>\n",
       "      <th>AnswerCount</th>\n",
       "      <th>CommentCount</th>\n",
       "      <th>FavoriteCount</th>\n",
       "      <th>AskerId</th>\n",
       "      <th>Reputation</th>\n",
       "      <th>TagCount</th>\n",
       "      <th>TitleLength</th>\n",
       "      <th>Technology</th>\n",
       "      <th>cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5319</td>\n",
       "      <td>8</td>\n",
       "      <td>1093</td>\n",
       "      <td>1631</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1119</td>\n",
       "      <td>502</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1799</td>\n",
       "      <td>6</td>\n",
       "      <td>2380</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>476</td>\n",
       "      <td>992</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>532</td>\n",
       "      <td>5</td>\n",
       "      <td>3372</td>\n",
       "      <td>1223</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>861</td>\n",
       "      <td>293</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6042</td>\n",
       "      <td>10</td>\n",
       "      <td>3800</td>\n",
       "      <td>428</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1091</td>\n",
       "      <td>845</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1714</td>\n",
       "      <td>8</td>\n",
       "      <td>2565</td>\n",
       "      <td>1434</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>447</td>\n",
       "      <td>1290</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4912</th>\n",
       "      <td>5200</td>\n",
       "      <td>10</td>\n",
       "      <td>2404</td>\n",
       "      <td>954</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>791</td>\n",
       "      <td>1041</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4913</th>\n",
       "      <td>4066</td>\n",
       "      <td>14</td>\n",
       "      <td>1161</td>\n",
       "      <td>853</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>233</td>\n",
       "      <td>631</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4914</th>\n",
       "      <td>3980</td>\n",
       "      <td>9</td>\n",
       "      <td>2296</td>\n",
       "      <td>679</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>490</td>\n",
       "      <td>1381</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4915</th>\n",
       "      <td>931</td>\n",
       "      <td>7</td>\n",
       "      <td>2536</td>\n",
       "      <td>873</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>338</td>\n",
       "      <td>1287</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4916</th>\n",
       "      <td>1984</td>\n",
       "      <td>7</td>\n",
       "      <td>1408</td>\n",
       "      <td>1828</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>289</td>\n",
       "      <td>1155</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4917 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0  Score  CreationDate  ViewCount  AnswerCount  CommentCount  \\\n",
       "0           5319      8          1093       1631            1             0   \n",
       "1           1799      6          2380         80            2             0   \n",
       "2            532      5          3372       1223            3             0   \n",
       "3           6042     10          3800        428            2             0   \n",
       "4           1714      8          2565       1434            1             0   \n",
       "...          ...    ...           ...        ...          ...           ...   \n",
       "4912        5200     10          2404        954            1             0   \n",
       "4913        4066     14          1161        853            3             8   \n",
       "4914        3980      9          2296        679            1             1   \n",
       "4915         931      7          2536        873            4             2   \n",
       "4916        1984      7          1408       1828            4             0   \n",
       "\n",
       "      FavoriteCount  AskerId  Reputation  TagCount  TitleLength  Technology  \\\n",
       "0                 1     1119         502         4           12           1   \n",
       "1                 7      476         992         1           14          16   \n",
       "2                 0      861         293         2            7           1   \n",
       "3                 1     1091         845         1            5           1   \n",
       "4                 7      447        1290         2           10          22   \n",
       "...             ...      ...         ...       ...          ...         ...   \n",
       "4912              7      791        1041         3            6          30   \n",
       "4913              1      233         631         2            2           1   \n",
       "4914              1      490        1381         3            9          27   \n",
       "4915              1      338        1287         1            2           1   \n",
       "4916              7      289        1155         0           10           1   \n",
       "\n",
       "      cluster  \n",
       "0           1  \n",
       "1           0  \n",
       "2           0  \n",
       "3           0  \n",
       "4           0  \n",
       "...       ...  \n",
       "4912        0  \n",
       "4913        1  \n",
       "4914        0  \n",
       "4915        0  \n",
       "4916        1  \n",
       "\n",
       "[4917 rows x 13 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Train_Data_set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_train = Train_Data_set['cluster']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       1\n",
       "1       0\n",
       "2       0\n",
       "3       0\n",
       "4       0\n",
       "       ..\n",
       "4912    0\n",
       "4913    1\n",
       "4914    0\n",
       "4915    0\n",
       "4916    1\n",
       "Name: cluster, Length: 4917, dtype: int32"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Run the Kmeans algorithm and get the index of data points clusters\n",
    "sse = []\n",
    "list_k = list(range(1, 5))\n",
    "\n",
    "for k in list_k:\n",
    "    km = KMeans(n_clusters=k)\n",
    "    km.fit(X_train)\n",
    "    sse.append(km.inertia_)\n",
    "\n",
    "# Plot sse against k\n",
    "plt.figure(figsize=(6, 6))\n",
    "plt.plot(list_k, sse, '-o')\n",
    "plt.xlabel(r'Number of clusters $k$')\n",
    "plt.ylabel('Sum of squared distance');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3850118260975122\n",
      "Wall time: 623 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "kmeans = KMeans(n_clusters=2).fit_predict(X_train)\n",
    "print(silhouette_score(X_train, kmeans))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3371345557347709\n",
      "Wall time: 680 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "kmeans = KMeans(n_clusters=3).fit_predict(X_train)\n",
    "print(silhouette_score(X_train, kmeans))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.29608854986071986\n",
      "Wall time: 728 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "kmeans = KMeans(n_clusters=4).fit_predict(X_train)\n",
    "print(silhouette_score(X_train, kmeans))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import silhouette_samples, silhouette_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i, k in enumerate([2, 3, 4]):\n",
    "    fig, (ax1, ax2) = plt.subplots(1, 2)\n",
    "    fig.set_size_inches(18, 7)\n",
    "    \n",
    "    # Run the Kmeans algorithm\n",
    "    km = KMeans(n_clusters=k)\n",
    "    labels = km.fit_predict(X_train)\n",
    "    centroids = km.cluster_centers_\n",
    "\n",
    "    # Get silhouette samples\n",
    "    silhouette_vals = silhouette_samples(X_train, labels)\n",
    "\n",
    "    # Silhouette plot\n",
    "    y_ticks = []\n",
    "    y_lower, y_upper = 0, 0\n",
    "    for i, cluster in enumerate(np.unique(labels)):\n",
    "        cluster_silhouette_vals = silhouette_vals[labels == cluster]\n",
    "        cluster_silhouette_vals.sort()\n",
    "        y_upper += len(cluster_silhouette_vals)\n",
    "        ax1.barh(range(y_lower, y_upper), cluster_silhouette_vals, edgecolor='none', height=1)\n",
    "        ax1.text(-0.03, (y_lower + y_upper) / 2, str(i + 1))\n",
    "        y_lower += len(cluster_silhouette_vals)\n",
    "\n",
    "    # Get the average silhouette score and plot it\n",
    "    avg_score = np.mean(silhouette_vals)\n",
    "    ax1.axvline(avg_score, linestyle='--', linewidth=2, color='green')\n",
    "    ax1.set_yticks([])\n",
    "    ax1.set_xlim([-0.1, 1])\n",
    "    ax1.set_xlabel('Silhouette coefficient values')\n",
    "    ax1.set_ylabel('Cluster labels')\n",
    "    ax1.set_title('Silhouette plot for the various clusters', y=1.02);\n",
    "    \n",
    "    # Scatter plot of data colored with labels\n",
    "    ax2.scatter(X_train.iloc[:, 0].values, X_train.iloc[:, 1].values, c=labels)\n",
    "    ax2.scatter(centroids[:, 0], centroids[:, 1], marker='*', c='r', s=250)\n",
    "    ax2.set_xlim([-2, 2])\n",
    "    ax2.set_xlim([-2, 2])\n",
    "    ax2.set_xlabel('X AXIS')\n",
    "    ax2.set_ylabel('Y AXIS')\n",
    "    ax2.set_title('Visualization of clustered data', y=1.02)\n",
    "    ax2.set_aspect('equal')\n",
    "    plt.tight_layout()\n",
    "    plt.suptitle(f'Silhouette analysis using k = {k}',\n",
    "                 fontsize=16, fontweight='semibold', y=1.05);\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      0.37      0.54      2483\n",
      "           1       1.00      0.57      0.73      2434\n",
      "           2       0.00      0.00      0.00         0\n",
      "           3       0.00      0.00      0.00         0\n",
      "\n",
      "    accuracy                           0.47      4917\n",
      "   macro avg       0.50      0.24      0.32      4917\n",
      "weighted avg       1.00      0.47      0.63      4917\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\user\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "c:\\users\\user\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "c:\\users\\user\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "predictions = km.predict(X_train)\n",
    "\n",
    "print(classification_report(Y_train, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 930    2 1545    6]\n",
      " [   3 1391    7 1033]\n",
      " [   0    0    0    0]\n",
      " [   0    0    0    0]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "predictions = km.predict(X_train)\n",
    "print(confusion_matrix(Y_train, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "clustering_kmeans = KMeans(n_clusters=2)\n",
    "Test_Data_set['clusters'] = clustering_kmeans.fit_predict(Test_Data_set)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_test = Test_Data_set['clusters']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       1\n",
       "1       1\n",
       "2       0\n",
       "3       0\n",
       "4       0\n",
       "       ..\n",
       "1225    0\n",
       "1226    1\n",
       "1227    1\n",
       "1228    0\n",
       "1229    0\n",
       "Name: clusters, Length: 1230, dtype: int32"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Run the Kmeans algorithm on test data set\n",
    "sse = []\n",
    "list_k = list(range(1, 5))\n",
    "\n",
    "for k in list_k:\n",
    "    km = KMeans(n_clusters=k)\n",
    "    km.fit(X_test)\n",
    "    sse.append(km.inertia_)\n",
    "\n",
    "# Plot sse against k\n",
    "plt.figure(figsize=(6, 6))\n",
    "plt.plot(list_k, sse, '-o')\n",
    "plt.xlabel(r'Number of clusters $k$')\n",
    "plt.ylabel('Sum of squared distance');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.38273359354764336\n",
      "Wall time: 101 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "kmeans = KMeans(n_clusters=2).fit_predict(X_test)\n",
    "print(silhouette_score(X_test, kmeans))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.34058539979592506\n",
      "Wall time: 159 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "kmeans = KMeans(n_clusters=3).fit_predict(X_test)\n",
    "print(silhouette_score(X_test, kmeans))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.31403962265451923\n",
      "Wall time: 148 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "kmeans = KMeans(n_clusters=4).fit_predict(X_test)\n",
    "print(silhouette_score(X_test, kmeans))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i, k in enumerate([2, 3, 4]):\n",
    "    fig, (ax1, ax2) = plt.subplots(1, 2)\n",
    "    fig.set_size_inches(18, 7)\n",
    "    \n",
    "    # Run the Kmeans algorithm\n",
    "    km = KMeans(n_clusters=k)\n",
    "    labels = km.fit_predict(X_test)\n",
    "    centroids = km.cluster_centers_\n",
    "\n",
    "    # Get silhouette samples\n",
    "    silhouette_vals = silhouette_samples(X_test, labels)\n",
    "\n",
    "    # Silhouette plot\n",
    "    y_ticks = []\n",
    "    y_lower, y_upper = 0, 0\n",
    "    for i, cluster in enumerate(np.unique(labels)):\n",
    "        cluster_silhouette_vals = silhouette_vals[labels == cluster]\n",
    "        cluster_silhouette_vals.sort()\n",
    "        y_upper += len(cluster_silhouette_vals)\n",
    "        ax1.barh(range(y_lower, y_upper), cluster_silhouette_vals, edgecolor='none', height=1)\n",
    "        ax1.text(-0.03, (y_lower + y_upper) / 2, str(i + 1))\n",
    "        y_lower += len(cluster_silhouette_vals)\n",
    "\n",
    "    # Get the average silhouette score and plot it\n",
    "    avg_score = np.mean(silhouette_vals)\n",
    "    ax1.axvline(avg_score, linestyle='--', linewidth=2, color='green')\n",
    "    ax1.set_yticks([])\n",
    "    ax1.set_xlim([-0.1, 1])\n",
    "    ax1.set_xlabel('Silhouette coefficient values')\n",
    "    ax1.set_ylabel('Cluster labels')\n",
    "    ax1.set_title('Silhouette plot for the various clusters', y=1.02);\n",
    "    \n",
    "    # Scatter plot of data colored with labels\n",
    "    ax2.scatter(X_test.values[:, 0], X_test.values[:, 1], c=labels)\n",
    "    ax2.scatter(centroids[:, 0], centroids[:, 1], marker='*', c='r', s=250)\n",
    "    ax2.set_xlim([-2, 2])\n",
    "    ax2.set_xlim([-2, 2])\n",
    "    ax2.set_xlabel('X AXIS')\n",
    "    ax2.set_ylabel('Y AXIS')\n",
    "    ax2.set_title('Visualization of clustered data', y=1.02)\n",
    "    ax2.set_aspect('equal')\n",
    "    plt.tight_layout()\n",
    "    plt.suptitle(f'Silhouette analysis using k = {k}',\n",
    "                 fontsize=16, fontweight='semibold', y=1.05);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.61      0.23      0.34       632\n",
      "           1       0.55      0.36      0.43       598\n",
      "           2       0.00      0.00      0.00         0\n",
      "           3       0.00      0.00      0.00         0\n",
      "\n",
      "    accuracy                           0.29      1230\n",
      "   macro avg       0.29      0.15      0.19      1230\n",
      "weighted avg       0.58      0.29      0.38      1230\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\user\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "c:\\users\\user\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "c:\\users\\user\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    }
   ],
   "source": [
    "predictions = km.predict(X_test)\n",
    "\n",
    "print(classification_report(Y_test, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[148 171 145 168]\n",
      " [ 94 213  88 203]\n",
      " [  0   0   0   0]\n",
      " [  0   0   0   0]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "predictions = km.predict(X_test)\n",
    "print(confusion_matrix(Y_test, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
